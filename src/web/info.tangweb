<html>
<head>
<meta charset="UTF-8"> 
<link href="/index.css" rel="stylesheet" type="text/css">
<title>ProcessManager <import=version></title>
<script>
function changeCmd(name) {
    let input = prompt("Entrée la nouvelle commande du process \""+name+"\":");
    if (input != null) {
        btnRequet("cmd "+name+" "+input, false);
    }
}
 
function changeCmdStop(name) {
    let input = prompt("Entrée la nouvelle commande de stop du process \""+name+"\":");
    if (input != null) {
        btnRequet("cmdstop "+name+" "+input, false);
    }
}

function changeCmdEnd() {
    let input = prompt("Entrée la nouvelle commande end:");
    if (input != null) {
        btnRequet("cmdend "+input, false);
    }
}

function changeTime() {
    let inputh = prompt("Entrée le temps avant le redémarage automatique (0 = ∞, negatife = date indiquer): Heure");
    if (inputh == null) return;
    let inputm = prompt("Entrée le temps avant le redémarage automatique (0 = ∞, negatife = date indiquer): Minute");
    if (inputh == null) return;
    let inputs = prompt("Entrée le temps avant le redémarage automatique (0 = ∞, negatife = date indiquer): Seconde");
    if (inputh == null) return;
    let input = (parseInt(inputh)*3600+parseInt(inputm)*60+parseInt(inputs))*1000;
    if (input != null) {
        btnRequet("timestopnoforce "+input, false);
    }
}

function changeRep(name) {
    let input = prompt("Entrée le nouveau répertoire du process \""+name+"\":");
    if (input != null) {
        btnRequet("rep "+name+" "+input, false);
    }
}

function changeRename(name) {
    let input = prompt("Entrée le nouveau nom du process \""+name+"\":");
    if (input != null) {
        if (input.includes(" ")) {
            alert("Erreur le nom d'un process ne peux contenir un ' '.");
        } else {
            btnRequet("rename "+name+" "+input, false);
        }
    }
}

function addProcess() {
    let name = prompt("Entrée le nom du nouveau process:");
    if (name != null && name != "") {
        if (name.includes(" ") || name.includes("~")) {
            alert("Erreur le nom d'un process ne peux contenir un ' ' ou '~'.");
        } else {
            let cmd = prompt("Entrée la command du nouveau process \""+name+"\":");
            if (cmd != null && cmd != "") {
                if (cmd.includes("~")) {
                    alert("Erreur la command d'un process ne peux contenir un '~'.");
                } else {
                    let rep = prompt("Entrée le répertoire du nouveau process \""+name+"\":");
                    if (rep != null && rep != "") {
                        if (rep.includes("~")) {
                            alert("Erreur la command d'un process ne peux contenir un '~'.");
                        } else {
                            let onStart = confirm("Voulez vous que le nouveau process \""+name+"\" démare au démarage du logicelle:");
                            let cmdStop = prompt("Entrée la command de stop du nouveau process \""+name+"\":");
		                    if (cmdStop != null && cmdStop != "") {
		                        if (cmdStop.includes("~")) {
		                            alert("Erreur la command d'un process ne peux contenir un '~'.");
		                        } else {
		                            btnRequet("add "+name+"~"+cmd+"~"+rep+"~"+onStart+"~"+cmdStop, false);
		                        }
		                    }
                        }
                    }
                }
            }
        }
    }
}

function changeRemove(name) {
    let input = confirm("Voulez vous suprimé le process \""+name+"\":");
    if (input) {
        btnRequet("remove "+name, true);
    }
}

function actionSend(name) {
    let input = document.getElementById("sendText").value;
    document.getElementById("sendText").value = "";
    if (input != null && input != "") {
        miseAf("POST", "info.tangweb", "send "+name+" "+input);
    }
}

function updateConsole() {
    if (consoleOpen == true) {
        document.getElementById("openConsole").src = "/close_console.png";
        document.getElementById("downPage").classList.remove("downPageClose");
        document.getElementById("downPage").classList.add("downPageOpen");
        document.getElementById("consolePanel").style.visibility = "visible";
    } else {
        document.getElementById("openConsole").src = "/open_console.png";
        document.getElementById("downPage").classList.remove("downPageOpen");
        document.getElementById("downPage").classList.add("downPageClose");
        document.getElementById("consolePanel").style.visibility = "hidden";
    }
}

function setConsoleGet(name) {
    consoleGet = name;
    document.getElementById("console").scrollLeft = 0;
    document.getElementById("console").scrollTop = 0;
    document.getElementById("consoleTitle").innerHTML = consoleGet;
    actualConsole();
}

function miseAf(a1, a2, a3) {
    cmdAf = a1;
    cmdAf2 = a2;
    cmdAf3 = a3;
}

actualConsole = function() {
    if (cmdAf != null && cmdAf != "") {
        sendRequet(cmdAf, cmdAf2, cmdAf3);
        cmdAf = "";
    } else {
        if (compt >= 30) {
            compt = 0;
            sendRequet("GET", "/info.tangweb", "");
            return;
        } else if (consoleGet != null && consoleGet != "" && consoleOpen == true) {
            sendRequet("POST", "info.tangweb", "read "+consoleGet);
        }
    }
    compt++;
};

function btnRequet(cmd, action) {
    if (action) {
        if (confirm("Action: "+cmd)) {
            miseAf("POST", "info.tangweb", cmd);
        }
    } else {
        if (confirm("Change: "+cmd)) {
            miseAf("POST", "info.tangweb", cmd);
        }
    }
}

function sendRequet(type ,rep, data) {
    sW = document.getElementById("console").scrollLeft;
    sH = document.getElementById("console").scrollTop;
    sendText = document.getElementById("sendText").value;
    let xhr = new XMLHttpRequest();
    xhr.open(type, rep, true);
    xhr.setRequestHeader("Content-Type", iden);
    xhr.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
            let reponse = this.responseText;
            if (reponse.charAt(0) == "@") {
                consoleText = reponse.substring(1, reponse.length);
                document.getElementById("console").innerText = consoleText;
            } else {
                document.write(reponse);
                document.close();
            }
        }
    };
    if (type == "POST")
        xhr.send(data);                                              
    else
        xhr.send();
}

</script>
</head>
<body style="background: #222222;">

<br>
<br>

<span style="color: red; background: gray;" id="timestart"><import=timestart></span><br>
<span style="color: red; background: gray;" id="timeisstart"><import=timeisstart></span><br>
<span style="color: red; background: gray;" id="timestopnoforce"><import=timestopnoforce></span><br>
<span style="color: red; background: gray;" id="timerestart"><import=timerestart></span><br>

<span style="color: green; background: pink;" class="right" onclick="changeTime();">Change Time Restart</span>

<span style="color: green; background: pink;" id="stopnoforceserver all" class="" onclick="btnRequet(this.id, true);">StopNoForceWithScript</span>
<span style="color: green; background: pink;" id="stopnoforcenoscriptserver all" class="" onclick="btnRequet(this.id, true);">StopNoForceNoScript</span>
<span style="color: green; background: pink;" id="stopscriptserver all" class="" onclick="btnRequet(this.id, true);">StopForceWithScript</span>
<span style="color: green; background: pink;" id="stopserver all" class="" onclick="btnRequet(this.id, true);">StopForce</span>

<br>
<br>

<script>
    function convertTimeBalise(nameBalise, decal) {
        let number = parseInt(document.getElementById(nameBalise).innerText);
        if (number == "0") return "∞";
        let date = new Date(number);
        return (date.getHours()-decal)+"h "+date.getMinutes()+"min "+date.getSeconds()+"sec";
    }

    function rempBalise(nameBalise, decal) {
        document.getElementById(nameBalise).innerText = convertTimeBalise(nameBalise, decal);
    }

    rempBalise("timestart", 0);
    rempBalise("timeisstart", 1);
    rempBalise("timestopnoforce", 1);
    rempBalise("timerestart", 1);
</script>

<export=noProcess>
<div class="processWindow">
    <span class="titleProcess">No process</span>
</div>
</export>

<export=oneProcess>
<div id="<import=nameProcess>" class="processWindowTitle" ondblclick="setConsoleGet(this.id);"><span class="<import=etatProcess>"></span>
    <span class="titleProcess"><import=nameProcess></span>
    <div id="onStart <import=nameProcess>" class="<import=onStartProcess> right" onclick="btnRequet(this.id, false);"> </div>
    <image id="stop <import=nameProcess>" src="/stop.png" class="right" onclick="btnRequet(this.id, true);">
    <image id="restart <import=nameProcess>" src="/restart.png" class="right" onclick="btnRequet(this.id, true);">
    <image id="start <import=nameProcess>" src="/start.png" class="right" onclick="btnRequet(this.id, true);">
</div>
<div  id="<import=nameProcess>" class="processWindow" ondblclick="setConsoleGet(this.id);">
    	<image id="<import=nameProcess>" src="/cmd.png" class="labelProcess" onclick="changeCmd(this.id);">
        <span class="textProcess"><import=cmdProcess></span>
        <image id="<import=nameProcess>" src="/rename.png" class="labelProcess right" onclick="changeRename(this.id);">
        <br>
        <image id="<import=nameProcess>" src="/rep.png" class="labelProcess" onclick="changeRep(this.id);">
        <span class="textProcess"><import=repProcess></span>
        <image id="<import=nameProcess>" src="/remove.png" class="labelProcess right" onclick="changeRemove(this.id);">
        <br>
        <image id="<import=nameProcess>" src="/cmdstop.png" class="labelProcess" onclick="changeCmdStop(this.id);">
        <span class="textProcess" style="color: #f82;"><import=cmdStopProcess></span>
        <image id="send <import=nameProcess> <import=cmdStopProcess>" src="/cmdstop.png" class="labelProcess right" onclick="btnRequet(this.id, true);">
</div>
<br>
</export>
<br>

<div id="downPage" class="downPageClose">
    <image id="openConsole" class="left" onclick="consoleOpen = !consoleOpen; updateConsole();">
    <span id="consoleTitle" class="left consoleTitle"></span>
    <hr width=4 class="right" style="opacity: 0%;">
    <image class="right" src="/cmdend.png" onclick="changeCmdEnd();">
    <hr width=8 class="right" style="opacity: 0%;">
    <span class="right consoleTitle" style="color: #f82;"><import=cmdend></span>
</div>
<div id="consolePanel">
    <div id="console" class="console"></div>
    <div id="execute" class="downPageClose">
        <span class="left consoleTitle">Execute: </span>
        <input autocomplete="off" id="sendText" class="textSend" type="text" onkeydown="if(event.keyCode == 13) actionSend(consoleGet);">
        <hr width=4 class="right" style="opacity: 0%;">
        <image src="/send.png" class="right" onclick="actionSend(consoleGet);">
    </div>
</div>

<div class="topPage">
    <image src="/refrech.png" class="left" onclick="compt = 0; sendRequet('GET', '/info.tangweb', '');">
    <span class="left title">ProcessManager <import=version> | <import=checkupdate></span>
    <hr class="right">
    <image src="/add.png" class="right" onclick="addProcess();">
</div>

<script>
    document.getElementById("consoleTitle").innerHTML = consoleGet;
    document.getElementById("console").innerText = consoleText;
    document.getElementById("console").scrollLeft = sW;
    document.getElementById("console").scrollTop = sH;
    document.getElementById("console").scrollHeight = document.getElementById("console").offsetHeight;
    document.getElementById("sendText").value = sendText;
    updateConsole();
</script>
</body>
</html>