<html>
<head>
<meta charset="UTF-8"> 
<link href="/index.css" rel="stylesheet" type="text/css">
<title>ProcessManager <import=version></title>
<script>
function changeCmd(name) {
	openPopMenu("Command Process", "Entrée la nouvelle commande du process \""+name+"\"", 1, [
            {
                'label': 'Command',
                'name': 'cmd',
                'type': 'text'
            }
        ], (result) => {
        	let cmd = result["cmd"];
        	if (cmd != "") {
        		btnRequet("cmd "+name+" "+cmd, false);
        	}
        });
}

function changeCmdStop(name) {
    openPopMenu("Command Stop Process", "Entrée la nouvelle commande de stop du process \""+name+"\"", 1, [
            {
                'label': 'Command',
                'name': 'cmdstop',
                'type': 'text'
            }
        ], (result) => {
        	let cmd = result["cmdstop"];
        	if (cmd != "") {
        		 btnRequet("cmdstop "+name+" "+cmd, false);
        	}
        });
}

function changeCmdEnd() {
    openPopMenu("Command End", "Entrée la nouvelle commande end", 1, [
            {
                'label': 'Command',
                'name': 'cmdend',
                'type': 'text'
            }
        ], (result) => {
        	let cmd = result["cmdend"];
        	if (cmd != "") {
        		btnRequet("cmdend "+cmd, false);
        	}
        });
}

function changeTime() {
	openPopMenu("Time Restart", "Entrée le temps avant le redémarage automatique (0 = ∞)", 1, [
            {
                'label': 'Heures',
                'name': 'heur',
                'type': 'number'
            },
            {
                'label': 'Minutes',
                'name': 'min',
                'type': 'number'
            },
            {
                'label': 'Secondes',
                'name': 'sec',
                'type': 'number'
            },
            {
                'label': 'Horaire',
                'name': 'horaire',
                'type': 'checkbox'
            }
        ], (result) => {
        	if (result["heur"] != "" && result["min"] != "" && result["sec"] != "" && result["horaire"] != "") {
        		let input = (parseInt(result["heur"])*3600+parseInt(result["min"])*60+parseInt(result["sec"]))*1000;
        		if (result["horaire"] == "true") {
        			input = -input;
        		}
        		btnRequet("timestopnoforce "+input, false);
        	}
        });
}

function changeRep(name) {
    openPopMenu("Folder Process", "Entrée le nouveau répertoire du process \""+name+"\"", 1, [
            {
                'label': 'Répertoire',
                'name': 'rep',
                'type': 'text'
            }
        ], (result) => {
        	let rep = result["rep"];
        	if (rep != "") {
                btnRequet("rep "+name+" "+rep, false);
        	}
        });
}

function changeRename(name) {
    openPopMenu("Rename Process", "Entrée le nouveau nom du process \""+name+"\"", 1, [
            {
                'label': 'Nom',
                'name': 'name',
                'type': 'text'
            }
        ], (result) => {
        	let namei = result["name"];
        	if (namei != "") {
                if (namei.includes(" ")) {
                    openPopMenu("Erreur", "Le nom d'un process ne peux contenir de ' '", 0);
                } else {
                    btnRequet("rename "+name+" "+namei, false);
                }
        	}
        });
}

function addProcess() {
    openPopMenu("Add process", "Entrée les données du nouveau process", 1, [
            {
                'label': 'Nom',
                'name': 'name',
                'type': 'text'
            },
            {
                'label': 'Command',
                'name': 'cmd',
                'type': 'text'
            },
            {
                'label': 'Répertoire',
                'name': 'rep',
                'type': 'text'
            },
            {
                'label': 'Démare au démarage',
                'name': 'start',
                'type': 'checkbox'
            },
            {
                'label': 'Command Stop',
                'name': 'cmdstop',
                'type': 'text'
            }
        ], (result) => {
            if (result["name"] != "" && result["cmd"] != "" && result["rep"] != "" && result["start"] != "" && result["cmdstop"] != "") {
                if (result["name"].includes(" ") || result["name"].includes("~")) {
                    openPopMenu("Erreur", "Le nom d'un process ne peux contenir de ' ' ou '~'", 0);
                } else {
                    if (result["cmd"].includes("~") || result["rep"].includes("~") || result["start"].includes("~") || result["cmdstop"].includes("~")) {
                        openPopMenu("Erreur", "La donné d'un process ne peux contenir de '~'", 0);
                    } else {
                        btnRequet("add "+result["name"]+"~"+result["cmd"]+"~"+result["rep"]+"~"+result["start"]+"~"+result["cmdstop"], false);
                    }
                }
            }
        });
}

function changeRemove(name) {
    openPopMenu("Remove Process", "Voulez vous suprimé le process \""+name+"\"", 2, [], (result) => {
        btnRequet("remove "+name, true);
    });
}

function actionSend(name) {
    let input = document.getElementById("sendText").value;
    document.getElementById("sendText").value = "";
    if (input != null && input != "") {
        miseAf("POST", "info.tangweb", "send "+name+" "+input);
    }
}

function updateConsole() {
    if (consoleOpen == true) {
        document.getElementById("openConsole").src = "/close_console.png";
        document.getElementById("downPage").classList.remove("downPageClose");
        document.getElementById("downPage").classList.add("downPageOpen");
        document.getElementById("consolePanel").style.visibility = "visible";
    } else {
        document.getElementById("openConsole").src = "/open_console.png";
        document.getElementById("downPage").classList.remove("downPageOpen");
        document.getElementById("downPage").classList.add("downPageClose");
        document.getElementById("consolePanel").style.visibility = "hidden";
    }
}

function setConsoleGet(name) {
    consoleGet = name;
    document.getElementById("console").scrollLeft = 0;
    document.getElementById("console").scrollTop = 0;
    document.getElementById("consoleTitle").innerHTML = consoleGet;
    actualConsole();
}

function miseAf(a1, a2, a3) {
    cmdAf = a1;
    cmdAf2 = a2;
    cmdAf3 = a3;
}

actualConsole = function() {
    if (cmdAf != null && cmdAf != "") {
        sendRequet(cmdAf, cmdAf2, cmdAf3);
        cmdAf = "";
    } else {
        if (compt >= 30) {
            if (popMenu.innerHTML == "") {
            	compt = 0;
            	sendRequet("GET", "/info.tangweb", "");
            }
            return;
        } else if (consoleGet != null && consoleGet != "" && consoleOpen == true) {
            sendRequet("POST", "info.tangweb", "read "+consoleGet);
        }
    }
    compt++;
};

function btnRequet(cmd, action) {
    openPopMenu("Validation d'envoie de requet", (action ? "Action: " : "Change: ")+cmd, 2, [], (result) => {
        miseAf("POST", "info.tangweb", cmd);
    });
}

function sendRequet(type ,rep, data) {
    sW = document.getElementById("console").scrollLeft;
    sH = document.getElementById("console").scrollTop;
    sendText = document.getElementById("sendText").value;
    let xhr = new XMLHttpRequest();
    xhr.open(type, rep, true);
    xhr.setRequestHeader("Content-Type", iden);
    xhr.onreadystatechange = function() {
        if (this.readyState == 4 && this.status == 200) {
            let reponse = this.responseText;
            if (reponse.charAt(0) == "@") {
                consoleText = reponse.substring(1, reponse.length);
                document.getElementById("console").innerText = consoleText;
            } else {
                document.write(reponse);
                document.close();
            }
        }
    };
    if (type == "POST")
        xhr.send(data);                                              
    else
        xhr.send();
}

</script>
</head>
<body style="background: #222222;">

<br>
<br>

<span style="color: red; background: gray;" id="timestart"><import=timestart></span><br>
<span style="color: red; background: gray;" id="timeisstart"><import=timeisstart></span><br>
<span style="color: red; background: gray;" id="timestopnoforce"><import=timestopnoforce></span><br>
<span style="color: red; background: gray;" id="timerestart"><import=timerestart></span><br>
<span style="color: red; background: gray;" id="daterestart"><import=daterestart></span><br>
<span style="color: red; background: gray;" id="isstop"><import=isstop></span><br>

<span style="color: green; background: pink;" class="right" onclick="changeTime();">Change Time Restart</span>

<span style="color: green; background: pink;" id="stopnoforceserver all" class="" onclick="btnRequet(this.id, true);">StopNoForceWithScript</span>
<span style="color: green; background: pink;" id="stopnoforcenoscriptserver all" class="" onclick="btnRequet(this.id, true);">StopNoForceNoScript</span>
<span style="color: green; background: pink;" id="stopscriptserver all" class="" onclick="btnRequet(this.id, true);">StopForceWithScript</span>
<span style="color: green; background: pink;" id="stopserver all" class="" onclick="btnRequet(this.id, true);">StopForce</span>

<br>
<br>

<script>
    function convertTimeBalise(nameBalise, normal) {
        let number = parseInt(document.getElementById(nameBalise).innerText);
        if (number == 0) return "∞";
        if (normal) {
        	let date = new Date(number);
       		const options = {year: '2-digit', month: '2-digit', day: '2-digit', hour: '2-digit', minute: '2-digit', second: '2-digit'};
        	return date.toLocaleDateString('fr-FR', options);
        } else {
        	let time = Math.floor((number < 0 ? -number : number)/1000);
			let heures = Math.floor(time/3600);
			let minutesI = Math.floor(time%3600);
			let minutes = Math.floor(minutesI/60);
			let secondes = Math.floor(minutesI%60);
        	return heures+":"+minutes+":"+secondes;
        }
    }

    function rempBalise(nameBalise, normal) {
        document.getElementById(nameBalise).innerText = convertTimeBalise(nameBalise, normal);
    }

	timestop = parseInt(document.getElementById("timestopnoforce").innerText);
	
    rempBalise("timestart", 1);
    rempBalise("timeisstart", 0);
    rempBalise("timestopnoforce", 0);
    rempBalise("timerestart", 0);
    rempBalise("daterestart", 1);
    
    if (timestop < 0) {
		document.getElementById("timestopnoforce").innerText = "Horaire "+document.getElementById("timestopnoforce").innerText;
	} else if (timestop > 0) {
		document.getElementById("timestopnoforce").innerText = "Crono "+document.getElementById("timestopnoforce").innerText;
	} else {
		document.getElementById("timestopnoforce").innerText = "Aucun "+document.getElementById("timestopnoforce").innerText;
	}
</script>

<export=noProcess>
<div class="processWindow">
    <span class="titleProcess">No process</span>
</div>
</export>

<export=oneProcess>
<div id="<import=nameProcess>" class="processWindowTitle" ondblclick="setConsoleGet(this.id);"><span class="<import=etatProcess>"></span>
    <span class="titleProcess"><import=nameProcess></span>
    <div id="onStart <import=nameProcess>" class="<import=onStartProcess> right" onclick="btnRequet(this.id, false);"> </div>
    <image id="stop <import=nameProcess>" src="/stop.png" class="right" onclick="btnRequet(this.id, true);">
    <image id="restart <import=nameProcess>" src="/restart.png" class="right" onclick="btnRequet(this.id, true);">
    <image id="start <import=nameProcess>" src="/start.png" class="right" onclick="btnRequet(this.id, true);">
</div>
<div  id="<import=nameProcess>" class="processWindow" ondblclick="setConsoleGet(this.id);">
    	<image id="<import=nameProcess>" src="/cmd.png" class="labelProcess" onclick="changeCmd(this.id);">
        <span class="textProcess"><import=cmdProcess></span>
        <image id="<import=nameProcess>" src="/rename.png" class="labelProcess right" onclick="changeRename(this.id);">
        <br>
        <image id="<import=nameProcess>" src="/rep.png" class="labelProcess" onclick="changeRep(this.id);">
        <span class="textProcess"><import=repProcess></span>
        <image id="<import=nameProcess>" src="/remove.png" class="labelProcess right" onclick="changeRemove(this.id);">
        <br>
        <image id="<import=nameProcess>" src="/cmdstop.png" class="labelProcess" onclick="changeCmdStop(this.id);">
        <span class="textProcess" style="color: #f82;"><import=cmdStopProcess></span>
        <image id="send <import=nameProcess> <import=cmdStopProcess>" src="/cmdstop.png" class="labelProcess right" onclick="btnRequet(this.id, true);">
</div>
<br>
</export>
<br>

<div id="downPage" class="downPageClose">
    <image id="openConsole" class="left" onclick="consoleOpen = !consoleOpen; updateConsole();">
    <span id="consoleTitle" class="left consoleTitle"></span>
    <hr width=4 class="right" style="opacity: 0%;">
    <image class="right" src="/cmdend.png" onclick="changeCmdEnd();">
    <hr width=8 class="right" style="opacity: 0%;">
    <span class="right consoleTitle" style="color: #f82;"><import=cmdend></span>
</div>
<div id="consolePanel">
    <div id="console" class="console"></div>
    <div id="execute" class="downPageClose">
        <span class="left consoleTitle">Execute: </span>
        <input autocomplete="off" id="sendText" class="textSend" type="text" onkeydown="if(event.keyCode == 13) actionSend(consoleGet);">
        <hr width=4 class="right" style="opacity: 0%;">
        <image src="/send.png" class="right" onclick="actionSend(consoleGet);">
    </div>
</div>

<div class="topPage">
    <image src="/refrech.png" class="left" onclick="compt = 0; sendRequet('GET', '/info.tangweb', '');">
    <span class="left title">ProcessManager <import=version> | <import=checkupdate></span>
    <hr class="right">
    <image src="/add.png" class="right" onclick="addProcess();">
</div>

<script>
    document.getElementById("consoleTitle").innerHTML = consoleGet;
    document.getElementById("console").innerText = consoleText;
    document.getElementById("console").scrollLeft = sW;
    document.getElementById("console").scrollTop = sH;
    document.getElementById("console").scrollHeight = document.getElementById("console").offsetHeight;
    document.getElementById("sendText").value = sendText;
    updateConsole();
</script>
<script src="/PopMenu.js"></script>
</body>
</html>